#!/bin/bash
configs() {
    cd dotfiles
    mkdir -p "/home/user/"
    echo "–ö–æ–ø–∏—Ä—É—é –∫–æ–Ω—Ñ–∏–≥–∏..."
    cp -rv ../* "/home/user/"
}
paru_install() {
    sudo pacman -S --needed base-devel
    git clone https://aur.archlinux.org/paru.git
    cd paru
    makepkg -si

}
setup_nvidia_mkinitcpio() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if [[ $EUID -ne 0 ]]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo: sudo bash -c '$(declare -f setup_nvidia_mkinitcpio); setup_nvidia_mkinitcpio'"
        return 1
    fi

    local config_file="/etc/mkinitcpio.conf"
    local modules=("i915" "nvidia" "nvidia_modeset" "nvidia_drm")
    local backup_file="${config_file}.backup.$(date +%Y%m%d_%H%M%S)"

    echo "üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª–µ–π NVIDIA –≤ mkinitcpio"
    echo "========================================"

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    cp "$config_file" "$backup_file"
    echo "‚úì –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $backup_file"

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –º–æ–¥—É–ª–∏
    local current_line=$(grep "^MODULES=" "$config_file")
    
    if [[ -z "$current_line" ]]; then
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ MODULES –≤ –∫–æ–Ω—Ñ–∏–≥–µ"
        return 1
    fi

    local current_modules=$(echo "$current_line" | sed -n 's/MODULES=(\(.*\))/\1/p')
    local new_modules="$current_modules"

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥—É–ª–∏
    echo "üîß –î–æ–±–∞–≤–ª—è—é –º–æ–¥—É–ª–∏..."
    for module in "${modules[@]}"; do
        if [[ ! " $new_modules " =~ " $module " ]]; then
            [[ -n "$new_modules" ]] && new_modules="$new_modules $module" || new_modules="$module"
            echo "  ‚úì –î–æ–±–∞–≤–ª–µ–Ω: $module"
        else
            echo "  ‚ö† –£–∂–µ –µ—Å—Ç—å: $module"
        fi
    done

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥
    sed -i "s/^MODULES=.*/MODULES=($new_modules)/" "$config_file"
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥ –æ–±–Ω–æ–≤–ª–µ–Ω: MODULES=($new_modules)"

    # –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º initramfs
    echo "üîÑ –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞—é initramfs..."
    if mkinitcpio -P; then
        echo "‚úÖ Initramfs —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–µ initramfs"
        return 1
    fi

    echo "========================================"
    echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É."
    return 0
}
setup_grub_config() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if [[ $EUID -ne 0 ]]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo: sudo bash -c '$(declare -f setup_grub_config); setup_grub_config'"
        return 1
    fi

    local grub_file="/etc/default/grub"
    local backup_file="${grub_file}.backup.$(date +%Y%m%d_%H%M%S)"

    echo "üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ GRUB"
    echo "========================================"

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    cp "$grub_file" "$backup_file"
    echo "‚úì –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $backup_file"

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    declare -A grub_params=(
        ["GRUB_TIMEOUT"]="0"
        ["GRUB_CMDLINE_LINUX_DEFAULT"]="loglevel=0 quiet rd.udev.log_priority=0 vt.global_cursor_default=0 systemd.show_status=auto splash mitigations=off"
    )

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    for param in "${!grub_params[@]}"; do
        local value="${grub_params[$param]}"
        
        # –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –∑–∞–º–µ–Ω—è–µ–º
        if grep -q "^${param}=" "$grub_file"; then
            sed -i "s|^${param}=.*|${param}=\"${value}\"|" "$grub_file"
            echo "‚úì –û–±–Ω–æ–≤–ª–µ–Ω: $param=\"$value\""
        else
            # –ï—Å–ª–∏ –Ω–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
            echo "${param}=\"${value}\"" >> "$grub_file"
            echo "‚úì –î–æ–±–∞–≤–ª–µ–Ω: $param=\"$value\""
        fi
    done

    # –û–±–Ω–æ–≤–ª—è–µ–º GRUB
    echo "üîÑ –û–±–Ω–æ–≤–ª—è—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é GRUB..."
    if command -v update-grub &> /dev/null; then
        update-grub
    elif command -v grub-mkconfig &> /dev/null; then
        grub-mkconfig -o /boot/grub/grub.cfg
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è GRUB"
        return 1
    fi

    echo "‚úÖ GRUB —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
    echo "========================================"
    echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GRUB –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    return 0
}
remove_echo_from_grub() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if [[ $EUID -ne 0 ]]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo: sudo bash -c '$(declare -f remove_echo_from_grub); remove_echo_from_grub'"
        return 1
    fi

    local grub_cfg="/boot/grub/grub.cfg"
    local backup_file="${grub_cfg}.backup.$(date +%Y%m%d_%H%M%S)"

    echo "üéÆ –£–¥–∞–ª—è—é —Å—Ç—Ä–æ–∫–∏ —Å echo –∏–∑ grub.cfg"
    echo "========================================"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if [[ ! -f "$grub_cfg" ]]; then
        echo "‚ùå –§–∞–π–ª $grub_cfg –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    cp "$grub_cfg" "$backup_file"
    echo "‚úì –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $backup_file"

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ
    local echo_count=$(grep -c "echo" "$grub_cfg")
    echo "‚úì –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ —Å echo: $echo_count"

    # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å echo
    if [[ $echo_count -gt 0 ]]; then
        sed -i '/echo/d' "$grub_cfg"
        echo "‚úì –£–¥–∞–ª–µ–Ω–æ $echo_count —Å—Ç—Ä–æ–∫ —Å echo"
    else
        echo "‚ö† –°—Ç—Ä–æ–∫ —Å echo –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi

    echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω: $grub_cfg"
    return 0
}
main() {
    configs
    paru_install
    setup_grub_config
    setup_nvidia_mkinitcpio
    sudo paru -Syu  < /home/user/dotfiles/packages
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k"
    configs
}
